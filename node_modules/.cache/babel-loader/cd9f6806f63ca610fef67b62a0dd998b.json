{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var EuropeCapitals = createSlice({\n  name: 'europeCapitals',\n  initialState: {\n    countries: null\n  },\n  reducers: {\n    setCountries: function setCountries(state, action) {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.countries = action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nvar setCountries = EuropeCapitals.actions.setCountries;\nexport { setCountries };\nexport var countries = function countries(state) {\n  return state.europeCapitals.countries;\n};\nexport default EuropeCapitals.reducer;","map":{"version":3,"sources":["/Users/quique/Mis cosas/Workspaces/PersonalProjects/basics/src/redux/slices/EuropeCapitals.js"],"names":["createSlice","EuropeCapitals","name","initialState","countries","reducers","setCountries","state","action","payload","actions","europeCapitals","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,cAAc,GAAGD,WAAW,CAAC;AACtCE,EAAAA,IAAI,EAAE,gBADgC;AAEtCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE;AADD,GAFwB;AAKtCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,sBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC7B;AACA;AACA;AACA;AACAD,MAAAA,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACC,OAAzB;AACH;AAPK;AAL4B,CAAD,CAAlC,C,CAiBP;;IACeH,Y,GAAiBL,cAAc,CAACS,O,CAAhCJ,Y;;AACf,OAAO,IAAMF,SAAS,GAAG,SAAZA,SAAY,CAAAG,KAAK;AAAA,SAAIA,KAAK,CAACI,cAAN,CAAqBP,SAAzB;AAAA,CAAvB;AAEP,eAAeH,cAAc,CAACW,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const EuropeCapitals = createSlice({\n    name: 'europeCapitals',\n    initialState: {\n        countries: null,\n    },\n    reducers: {\n        setCountries: (state, action) => {\n            // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n            // doesn't actually mutate the state because it uses the Immer library,\n            // which detects changes to a \"draft state\" and produces a brand new\n            // immutable state based off those changes\n            state.countries = action.payload;\n        },\n\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setCountries } = EuropeCapitals.actions;\nexport const countries = state => state.europeCapitals.countries;\n\nexport default EuropeCapitals.reducer"]},"metadata":{},"sourceType":"module"}